<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><element><id>UMLPackage</id><coordinates><x>10</x><y>30</y><w>240</w><h>100</h></coordinates><panel_attributes>arrows
--
displayAttacks(areaId)
displayArrow(mapX, mapY, unitIndex)
displayAttackOptions(id)
clearArrows()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>10</x><y>160</y><w>260</w><h>290</h></coordinates><panel_attributes>moving
--
var destinationId
var originId
var moveDestinationIds
var fromAreas
--
startMove(controller)
findUnitsAreas(control)
hightlightUnitAreas(allOrigins)
addMoveOriginListeners(allOrigins)
moveOriginHandler(event)
removeOriginListeners(allOrigins)
addMoveDestinationListeners(allOrigins)
rotateUnits(targetAreaId)
rotateUnitsHandler()
moveDestinationHandler(event)
removeDestinationListeners(allOrigins
clearUnits()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>290</x><y>50</y><w>310</w><h>260</h></coordinates><panel_attributes>attacking
--
var attackingAreaId
var defendingAreaId
var allFriendlyFrontLineAreas = []
var enemyNeighbours = []
--
startAttack(friendly)
findFrontline(friendly)
addAttackAreaListeners(allAttackAreaIds)
findAdjacentUnAttackedEnemyAreas(attackingAreaId)
attackAreaHandler(event)
removeAttackAreaListeners(allAttackAreaIds)
addDefenderAreaListeners(allDefendingAreaIds)
attackDestinationHandler(event)
removeDefendingAreaListeners(allDefendingAreas))</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>400</x><y>730</y><w>140</w><h>70</h></coordinates><panel_attributes>intergrated2
--
loadHandler()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>20</x><y>710</y><w>270</w><h>120</h></coordinates><panel_attributes>unitSetUp
--
var turn = 1
--
defaultSetUp()
displayUnits()
displayAllied(mapX, mapY, unitIndex)
displayGerman(mapX, mapY, unitIndex)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>390</x><y>550</y><w>190</w><h>100</h></coordinates><panel_attributes>start
--
addSplashListerner()
removeSplashListerner()
continueCampaignHandler()
startCampaignHandler()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>520</y><w>350</w><h>120</h></coordinates><panel_attributes>highLights
--
highlightArea(coords, highlightColor = PALE_ORANGE)
highlightFriendly(coords, highlightColor = LIGHT_GREY)
highlightEneamy(coords, highlightColor = LIGHT_PURPLE)
clearHighlights()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>650</x><y>50</y><w>210</w><h>290</h></coordinates><panel_attributes>Area
--
id:string
terrain:string
canSupplyAllied:boolean
canSupplyGerman:boolean
control:string
centerX:int
centerY:int
vp:int
fullName:string
_hasAttacked:boolean false
--
addUnit(unit)
get areaName()
addNeighbour(aNeighbour)
addAttackArrow(anAttackArrow)
findArrowOptions(id)
clearAttack()
makeAttack()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>880</x><y>50</y><w>600</w><h>360</h></coordinates><panel_attributes>Game
--
_allUnits:[]
_allAreas:[]
_allMoves: []
_allAttacks:[]
_allReinforcementUnits = []
_clock
--
addUnit(id, name, army, training, branch, startTurn, startPosition)
addReinforcementUnit(id, name, army, training, branch, startTurn, startPosition)
reportAlliedUnits()
reportGermanUnits()
findAdjacentEneamyAreas(targetAreaId)
findAdjacentFriendlyAreas(targetAreaId)
addArea(id, terrain, canSupplyAllied, canSupplyGerman, control, centerX, centerY, vp = 0, fullName = "")
reportAreas()
getUnitsInArea(targetAreaId)
getArea(targetAreaId)
addNeighbours(targetAreaId, allNeighbourIds)
findAttackArrows(targetAreaId)
displayAttackArrows(attackAreaId, allNeighbourIds)
addAttackArrows(attackAreaId, allNeighbourIds)
addMove(originId, destinationId, unitId)
addAttack(originId, destinationId, areaId)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>640</x><y>490</y><w>210</w><h>190</h></coordinates><panel_attributes>Clock
--
_currentTurn:int
_totalTurn:int
_allDates:[]
_allRules[]
_allDescriptions:[]
--
get turn()
get date()
get specialRules()
get description()
nextTurn()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>480</y><w>210</w><h>230</h></coordinates><panel_attributes>Unit
--
id:string
name:string
army:string
training:string
branch:string
startTurn:int
startPosition:string
_currentPosition:string
_hasMoved :boolean false
--
get name()
get army()
clearMove()
makeMove()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>750</y><w>210</w><h>120</h></coordinates><panel_attributes>Attack
--
_turn
_attackingAreaId:string
_defendingAreaId:string

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>930</x><y>750</y><w>210</w><h>110</h></coordinates><panel_attributes>Move
--
_turn
_originId
_destinationId
_unitId
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1070</x><y>860</y><w>140</w><h>70</h></coordinates><panel_attributes>Removed set methods.
Added turn as a
parameter to the class.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>180</x><y>450</y><w>140</w><h>70</h></coordinates><panel_attributes>These highlighted 
methods are not new 
but have had changes 
made to them.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>430</x><y>310</y><w>170</w><h>100</h></coordinates><panel_attributes>Call game.addAttack()
in attackDestinationFinder()

Is there any need to change 
findFrontline() like 
findUnitsArea() in moving?
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>720</x><y>340</y><w>140</w><h>70</h></coordinates><panel_attributes>Call game.addAttack()
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>700</x><y>870</y><w>140</w><h>70</h></coordinates><panel_attributes>Removed set methods.
Added turn as a
parameter to the class.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1290</x><y>410</y><w>140</w><h>70</h></coordinates><panel_attributes>Create addAttack()
bg=green
</panel_attributes><additional_attributes></additional_attributes></element></diagram>